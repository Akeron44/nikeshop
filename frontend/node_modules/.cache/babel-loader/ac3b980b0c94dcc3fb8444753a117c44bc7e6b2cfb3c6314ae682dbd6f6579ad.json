{"ast":null,"code":"var _jsxFileName = \"/Users/akeronallkushi/Desktop/REACT/Auth Lesson/frontend/src/pages/AuthPage.js\",\n  _s = $RefreshSig$();\nimport { Form, Link, useActionData, useNavigate, useSearchParams, redirect, json, useLoaderData } from \"react-router-dom\";\nimport Button from \"../UI/Button\";\nimport classes from \"./AuthPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const login = searchParams.get(\"mode\") === \"login\";\n  const navigate = useNavigate();\n  const userData = useLoaderData();\n  console.log(userData);\n  const signInHandler = event => {\n    event.preventDefault();\n    return;\n    // navigate(\"/products\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [login ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email-address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${login ? \"register\" : \"login\"}`,\n          children: login ? \"Register\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: signInHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AuthPage, \"vPCAHqKu9NKSQAwCtIf0PGrCI/w=\", false, function () {\n  return [useSearchParams, useNavigate, useLoaderData];\n});\n_c = AuthPage;\nexport default AuthPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const response = await fetch(\"https://players-c7f1b-default-rtdb.firebaseio.com/nikeusers.json\");\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't receive the user information\"\n    }, {\n      status: 500\n    });\n  }\n  ;\n  const userData = await response.json();\n  return userData;\n}\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\"; // if no mode exists then we assign the login\n  const method = request.method;\n  const formData = await request.formData();\n  const authData = {\n    email: formData.get(\"email\"),\n    password: formData.get(\"password\")\n  };\n  if (mode !== \"login\" || mode !== \"register\") {\n    throw json({\n      message: \"Unsupported mode!\"\n    }, {\n      status: 422\n    });\n  }\n  const response = await fetch(`https://localhost:8080/${mode}`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response; // in order to be able to return errors and shows them to the user\n  }\n\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save the event!\"\n    }, {\n      status: 500\n    });\n  }\n  ;\n\n  //soon manage that token ...\n\n  return redirect(\"/products\");\n}\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["Form","Link","useActionData","useNavigate","useSearchParams","redirect","json","useLoaderData","Button","classes","AuthPage","searchParams","login","get","navigate","userData","console","log","signInHandler","event","preventDefault","form","actions","loader","request","params","response","fetch","ok","message","status","action","URL","url","mode","method","formData","authData","email","password","headers","body","JSON","stringify"],"sources":["/Users/akeronallkushi/Desktop/REACT/Auth Lesson/frontend/src/pages/AuthPage.js"],"sourcesContent":["import { Form, Link, useActionData, useNavigate, useSearchParams, redirect, json, useLoaderData } from \"react-router-dom\";\nimport Button from \"../UI/Button\";\nimport classes from \"./AuthPage.module.css\"\n\nconst AuthPage = () => {\n    const [searchParams] = useSearchParams();\n    const login = searchParams.get(\"mode\") === \"login\";\n    const navigate = useNavigate();\n    const userData = useLoaderData();\n    console.log(userData);\n    const signInHandler = event => {\n        event.preventDefault();\n        return\n        // navigate(\"/products\");\n    };\n\n    return <>\n        <Form method=\"post\" className={classes.form}>\n            {/* {!login &&\n                <>\n                    <div>\n                        <label htmlFor=\"name\">Name*</label>\n                        <input id=\"namr\" name=\"name\" placeholder=\"Name\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"surname\">Surname*</label>\n                        <input id=\"surname\" name=\"surname\" placeholder=\"Surname\" />\n                    </div>\n                </>} */}\n            {login ? <p>Login</p> : <p>Create new user</p>}\n            <div>\n                <label htmlFor=\"email\">Email</label>\n                <input id=\"email\" name=\"email\" placeholder=\"Email-address\" />\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password</label>\n                <input id=\"password\" name=\"password\" placeholder=\"Password\" />\n            </div>\n            <div className={classes.actions}>\n                <Link to={`?mode=${login ? \"register\" : \"login\"}`}>{login ? \"Register\" : \"Login\"}</Link>\n                <button onSubmit={signInHandler}>Save</button>\n            </div>\n        </Form>\n    </>\n};\n\nexport default AuthPage;\n\nexport async function loader({ request, params }) {\n    const response = await fetch(\"https://players-c7f1b-default-rtdb.firebaseio.com/nikeusers.json\");\n    if (!response.ok) {\n        throw json({ message: \"Couldn't receive the user information\" }, { status: 500 })\n    };\n    const userData = await response.json();\n    return userData;\n}\n\nexport async function action({ request, params }) {\n    const searchParams = new URL(request.url).searchParams;\n    const mode = searchParams.get(\"mode\") || \"login\"; // if no mode exists then we assign the login\n    const method = request.method;\n    const formData = await request.formData();\n    const authData = {\n        email: formData.get(\"email\"),\n        password: formData.get(\"password\"),\n    };\n\n    if (mode !== \"login\" || mode !== \"register\") {\n        throw json({ message: \"Unsupported mode!\" }, { status: 422 })\n    }\n\n    const response = await fetch(`https://localhost:8080/${mode}`, {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(authData)\n    });\n\n    if (response.status === 422 || response.status === 401) {\n        return response; // in order to be able to return errors and shows them to the user\n    }\n\n    if (!response.ok) {\n        throw json({ message: \"Could not save the event!\" }, {\n            status: 500\n        })\n    };\n\n    //soon manage that token ...\n\n    return redirect(\"/products\");\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,aAAa,EAAEC,WAAW,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACzH,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAAA;AAAA;AAE3C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,YAAY,CAAC,GAAGP,eAAe,EAAE;EACxC,MAAMQ,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,KAAK,OAAO;EAClD,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGR,aAAa,EAAE;EAChCS,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,MAAMG,aAAa,GAAGC,KAAK,IAAI;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA;EACJ,CAAC;;EAED,oBAAO;IAAA,uBACH,QAAC,IAAI;MAAC,MAAM,EAAC,MAAM;MAAC,SAAS,EAAEX,OAAO,CAACY,IAAK;MAAA,WAYvCT,KAAK,gBAAG;QAAA,UAAG;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI,gBAAG;QAAA,UAAG;MAAe;QAAA;QAAA;QAAA;MAAA,QAAI,eAC9C;QAAA,wBACI;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UAAO,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAA,wBACI;UAAO,OAAO,EAAC,UAAU;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1C;UAAO,EAAE,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,eACN;QAAK,SAAS,EAAEH,OAAO,CAACa,OAAQ;QAAA,wBAC5B,QAAC,IAAI;UAAC,EAAE,EAAG,SAAQV,KAAK,GAAG,UAAU,GAAG,OAAQ,EAAE;UAAA,UAAEA,KAAK,GAAG,UAAU,GAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxF;UAAQ,QAAQ,EAAEM,aAAc;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA;EACH,iBACR;AACP,CAAC;AAAC,GAxCIR,QAAQ;EAAA,QACaN,eAAe,EAErBD,WAAW,EACXI,aAAa;AAAA;AAAA,KAJ5BG,QAAQ;AA0Cd,eAAeA,QAAQ;AAEvB,OAAO,eAAea,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,CAAC;EAChG,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMtB,IAAI,CAAC;MAAEuB,OAAO,EAAE;IAAwC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrF;EAAC;EACD,MAAMf,QAAQ,GAAG,MAAMW,QAAQ,CAACpB,IAAI,EAAE;EACtC,OAAOS,QAAQ;AACnB;AAEA,OAAO,eAAegB,MAAM,QAAsB;EAAA,IAArB;IAAEP,OAAO;IAAEC;EAAO,CAAC;EAC5C,MAAMd,YAAY,GAAG,IAAIqB,GAAG,CAACR,OAAO,CAACS,GAAG,CAAC,CAACtB,YAAY;EACtD,MAAMuB,IAAI,GAAGvB,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC;EAClD,MAAMsB,MAAM,GAAGX,OAAO,CAACW,MAAM;EAC7B,MAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACY,QAAQ,EAAE;EACzC,MAAMC,QAAQ,GAAG;IACbC,KAAK,EAAEF,QAAQ,CAACvB,GAAG,CAAC,OAAO,CAAC;IAC5B0B,QAAQ,EAAEH,QAAQ,CAACvB,GAAG,CAAC,UAAU;EACrC,CAAC;EAED,IAAIqB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,UAAU,EAAE;IACzC,MAAM5B,IAAI,CAAC;MAAEuB,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACjE;EAEA,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,0BAAyBO,IAAK,EAAC,EAAE;IAC3DM,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDL,MAAM,EAAE,MAAM;IACdM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;EACjC,CAAC,CAAC;EAEF,IAAIX,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAIJ,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;IACpD,OAAOJ,QAAQ,CAAC,CAAC;EACrB;;EAEA,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMtB,IAAI,CAAC;MAAEuB,OAAO,EAAE;IAA4B,CAAC,EAAE;MACjDC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN;EAAC;;EAED;;EAEA,OAAOzB,QAAQ,CAAC,WAAW,CAAC;AAChC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}