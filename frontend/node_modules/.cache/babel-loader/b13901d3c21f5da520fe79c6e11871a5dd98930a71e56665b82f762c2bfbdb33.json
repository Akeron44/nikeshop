{"ast":null,"code":"var _jsxFileName = \"/Users/akeronallkushi/Desktop/REACT/Nike Backend/frontend/src/components/Cart/CheckOutDetails.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useContext, useEffect, useState } from \"react\";\nimport cartContext from \"../../store/use-context\";\nimport UseInput from \"../../hooks/UseInput\";\nimport Button from \"../../UI/Button\";\nimport classes from \"./CheckOutDetails.module.css\";\nimport Input from \"../../UI/Input\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckOutDetails = () => {\n  _s();\n  const [paymentMethod, setPaymentMethod] = useState(\"cash\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const {\n    value: nameValue,\n    onChange: nameOnChangeHandler,\n    onBlur: nameOnBlurHandler,\n    inputIsValid: nameInputIsValid,\n    inputHasError: nameInputHasError,\n    reset: resetName\n  } = UseInput(value => value.trim().length > 3);\n  const {\n    value: addressValue,\n    onChange: addressOnChangeHandler,\n    onBlur: addressOnBlurHandler,\n    inputIsValid: addressInputIsValid,\n    inputHasError: addressInputHasError,\n    reset: resetAddress\n  } = UseInput(value => value.includes(\"Street\"));\n  const {\n    value: cartHolderValue,\n    onChange: cartHolderOnChangeHandler,\n    onBlur: cartHolderOnBlurHandler,\n    inputIsValid: cartHolderInputIsValid,\n    inputHasError: cartHolderInputHasError,\n    reset: resetCartHolder\n  } = UseInput(value => value.trim().length > 5);\n  const {\n    value: cartNumberValue,\n    onChange: cartNumberOnChangeHandler,\n    onBlur: cartNumberOnBlurHandler,\n    inputIsValid: cartNumberInputIsValid,\n    inputHasError: cartNumberInputHasError,\n    reset: resetCartNumber\n  } = UseInput(value => value.trim().length === 12);\n  const {\n    value: cartExpiryDateValue,\n    onChange: cartExpiryDateOnChangeHandler,\n    onBlur: cartExpiryDateOnBlurHandler,\n    inputIsValid: cartExpiryDateInputIsValid,\n    inputHasError: cartExpiryDateInputHasError,\n    reset: resetCartExpiryDate\n  } = UseInput(value => value.includes(\"/\") && value.trim().length === 5);\n  const {\n    value: cartCodeValue,\n    onChange: cartCodeOnChangeHandler,\n    onBlur: cartCodeOnBlurHandler,\n    inputIsValid: cartCodeInputIsValid,\n    inputHasError: cartCodeInputHasError,\n    reset: resetCartCode\n  } = UseInput(value => value.trim().length === 3);\n  useEffect(() => {\n    if (paymentMethod === \"cash\") {\n      setFormIsValid(nameInputIsValid && addressInputIsValid);\n    }\n    if (paymentMethod === \"cart\") {\n      setFormIsValid(nameInputIsValid && addressInputIsValid && cartHolderInputIsValid && cartExpiryDateInputIsValid && cartNumberInputIsValid && cartCodeInputIsValid);\n    }\n  }, [paymentMethod, nameInputIsValid, addressInputIsValid, cartHolderInputIsValid, cartExpiryDateInputIsValid, cartNumberInputIsValid, cartCodeInputIsValid]);\n  const {\n    setCheckOut,\n    cartItems\n  } = useContext(cartContext);\n  function paymentMethodHandler(event) {\n    setPaymentMethod(event.target.value);\n  }\n  function editOrderHandler() {\n    setCheckOut(false);\n  }\n  async function sendOrderToDataBase() {\n    setIsLoading(true);\n    setIsSubmitted(false);\n    const response = await fetch(\"https://players-c7f1b-default-rtdb.firebaseio.com/products/order.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        order: cartItems.items,\n        name: nameValue,\n        address: addressValue,\n        paymentMethod: paymentMethod,\n        cartHolder: cartHolderValue ? cartHolderValue : null,\n        cartNumber: cartNumberValue ? cartNumberValue : null,\n        cartExpiryDate: cartExpiryDateValue ? cartExpiryDateValue : null,\n        cartCode: cartCodeValue ? cartCodeValue : null\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw {\n        message: \"Order could not be sent\"\n      };\n    }\n    setIsLoading(false);\n    setIsSubmitted(true);\n    return response;\n  }\n  ;\n  function sendOrderHandler(event) {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    ;\n    sendOrderToDataBase();\n    resetName();\n    resetAddress();\n    resetCartHolder();\n    resetCartNumber();\n    resetCartExpiryDate();\n    resetCartCode();\n  }\n  useEffect(() => {\n    if (isSubmitted === true) {\n      setTimeout(() => {\n        return redirect(\"/products\");\n      }, 1500);\n    }\n  }, [isSubmitted]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoading && !isSubmitted && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendOrderHandler,\n      style: {\n        height: `${paymentMethod === \"cash\" ? \"200px\" : \"450px\"}`\n      },\n      className: classes.div,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        inputHasError: nameInputHasError,\n        name: \"name\",\n        label: \"Full Name: \",\n        value: nameValue,\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Joe Doe...\",\n        onChange: nameOnChangeHandler,\n        onBlur: nameOnBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"*Invalid name. Name needs to be at least 3 characters long\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        inputHasError: addressInputHasError,\n        name: \"address\",\n        label: \"Address: \",\n        value: addressValue,\n        id: \"address\",\n        type: \"text\",\n        placeholder: \"Street\",\n        onChange: addressOnChangeHandler,\n        onBlur: addressOnBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), addressInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error,\n        children: \"*Invalid address. It doesn't have a street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"payment\",\n          children: \"Payment: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: paymentMethod,\n          name: \"payment-method\",\n          onChange: paymentMethodHandler,\n          defaultValue: \"cash\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cart\",\n            children: \"Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), paymentMethod === \"cart\" && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          inputHasError: cartHolderInputHasError,\n          name: \"cart-holder\",\n          label: \"Cart Holder \",\n          value: cartHolderValue,\n          id: \"cart-holder\",\n          type: \"text\",\n          placeholder: \"Cart Holder\",\n          onChange: cartHolderOnChangeHandler,\n          onBlur: cartHolderOnBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), cartHolderInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"*Invalid name. Name needs to be at least 5 characters long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          inputHasError: cartNumberInputHasError,\n          name: \"cart-number\",\n          label: \"Cart Number\",\n          value: cartNumberValue,\n          id: \"cart-number\",\n          type: \"text\",\n          placeholder: \"Cart Number\",\n          onChange: cartNumberOnChangeHandler,\n          onBlur: cartNumberOnBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), cartNumberInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"*Invalid input. Cart needs to have 12 numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          inputHasError: cartExpiryDateInputHasError,\n          name: \"cart-expiry\",\n          label: \"Cart Expiry \",\n          value: cartExpiryDateValue,\n          id: \"cart-expiry\",\n          type: \"text\",\n          placeholder: \"03/23\",\n          onChange: cartExpiryDateOnChangeHandler,\n          onBlur: cartExpiryDateOnBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), cartExpiryDateInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"*Invalid date. It doesn't contain \\\"/\\\" or it has not a valid date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          inputHasError: cartCodeInputHasError,\n          name: \"cart-code\",\n          label: \"Cart Code \",\n          value: cartCodeValue,\n          id: \"cart-code\",\n          type: \"password\",\n          placeholder: \"***\",\n          onChange: cartCodeOnChangeHandler,\n          onBlur: cartCodeOnBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), cartCodeInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error,\n          children: \"*Invalid code. Code needs to be 3 characters long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: editOrderHandler,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !formIsValid,\n          type: \"submit\",\n          children: \"Finish order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 44\n    }, this), isLoading && !isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sending Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 43\n    }, this), !isLoading && isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order Sent!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n};\n_s(CheckOutDetails, \"19FmY1diZ4cJujBMMdNgf591OPQ=\");\n_c = CheckOutDetails;\nexport default CheckOutDetails;\n\n//import { Fragment, useContext, useEffect, useState } from \"react\";\n// import { useNavigation } from \"react-router-dom\";\n// import { Form } from \"react-router-dom\";\n// import cartContext from \"../../store/use-context\";\n// import UseInput from \"../../hooks/UseInput\";\n// import Button from \"../../UI/Button\"\n// import classes from \"./CheckOutDetails.module.css\"\n\n// const CheckOutDetails = () => {\n//     const [paymentMethod, setPaymentMethod] = useState(\"cash\");\n//     const [formIsValid, setFormIsValid] = useState(false);\n//     const {\n//         value: nameValue,\n//         onChange: nameOnChangeHandler,\n//         onBlur: nameOnBlurHandler,\n//         inputIsValid: nameInputIsValid,\n//         inputHasError: nameInputHasError,\n//         reset: resetName\n//     } = UseInput(value => value.trim().length > 3);\n\n//     const {\n//         value: addressValue,\n//         onChange: addressOnChangeHandler,\n//         onBlur: addressOnBlurHandler,\n//         inputIsValid: addressInputIsValid,\n//         inputHasError: addressInputHasError,\n//         reset: resetAddress\n//     } = UseInput(value => value.includes(\"Street\"));\n\n//     const {\n//         value: cartHolderValue,\n//         onChange: cartHolderOnChangeHandler,\n//         onBlur: cartHolderOnBlurHandler,\n//         inputIsValid: cartHolderInputIsValid,\n//         inputHasError: cartHolderInputHasError,\n//         reset: resetCartHolder\n//     } = UseInput(value => value.trim().length > 5);\n\n//     const {\n//         value: cartNumberValue,\n//         onChange: cartNumberOnChangeHandler,\n//         onBlur: cartNumberOnBlurHandler,\n//         inputIsValid: cartNumberInputIsValid,\n//         inputHasError: cartNumberInputHasError,\n//         reset: resetCartNumber\n//     } = UseInput(value => value.trim().length === 12);\n\n//     const {\n//         value: cartExpiryDateValue,\n//         onChange: cartExpiryDateOnChangeHandler,\n//         onBlur: cartExpiryDateOnBlurHandler,\n//         inputIsValid: cartExpiryDateInputIsValid,\n//         inputHasError: cartExpiryDateInputHasError,\n//         reset: resetCartExpiryDate\n//     } = UseInput(value => value.includes(\"/\") && value.trim().length === 5);\n\n//     const {\n//         value: cartCodeValue,\n//         onChange: cartCodeOnChangeHandler,\n//         onBlur: cartCodeOnBlurHandler,\n//         inputIsValid: cartCodeInputIsValid,\n//         inputHasError: cartCodeInputHasError,\n//         reset: resetCartCode\n//     } = UseInput(value => value.trim().length === 3);\n\n//     useEffect(() => {\n//         if (paymentMethod === \"cash\") {\n//             setFormIsValid(nameInputIsValid && addressInputIsValid)\n//         }\n\n//         if (paymentMethod === \"cart\") {\n//             setFormIsValid(nameInputIsValid && addressInputIsValid && cartHolderInputIsValid && cartExpiryDateInputIsValid && cartNumberInputIsValid && cartCodeInputIsValid)\n//         }\n//     }, [paymentMethod, nameInputIsValid, addressInputIsValid, cartHolderInputIsValid, cartExpiryDateInputIsValid, cartNumberInputIsValid, cartCodeInputIsValid])\n\n//     const { setCheckOut, cartItems } = useContext(cartContext)\n//     function paymentMethodHandler(event) {\n//         setPaymentMethod(event.target.value);\n//     }\n\n//     function editOrderHandler() {\n//         setCheckOut(false)\n//     }\n\n//     const navigation = useNavigation();\n//     const isSubmitting = navigation.state === \"submitting\";\n\n//     return (\n//         <Form itemID=\"a1\" method=\"post\" style={{ height: `${paymentMethod === \"cash\" ? \"200px\" : \"450px\"}` }} className={classes.div}>\n//             <div className={classes.details}>\n//                 <label style={{ color: `${nameInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"name\">Full name: </label>\n//                 <input style={{ border: `${nameInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={nameValue} onChange={nameOnChangeHandler} onBlur={nameOnBlurHandler} name=\"name\" id=\"name\" type=\"text\" placeholder=\"Joe Doe...\" required />\n//             </div>\n//             {nameInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 3 characters long</p>}\n\n//             <div className={classes.details}>\n//                 <label style={{ color: `${addressInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"address\">Address: </label>\n//                 <input style={{ border: `${addressInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={addressValue} onChange={addressOnChangeHandler} onBlur={addressOnBlurHandler} name=\"address\" id=\"address\" type=\"text\" placeholder=\"Street name and number...\" required />\n//             </div>\n//             {addressInputHasError && <p className={classes.error}>*Invalid address. It doesn't have a street</p>}\n\n//             <div className={classes.details}>\n//                 <label htmlFor=\"payment\">Payment: </label>\n//                 <select value={paymentMethod} name=\"payment-method\" onChange={paymentMethodHandler} defaultValue=\"cash\">\n//                     <option value=\"cash\">Cash</option>\n//                     <option value=\"cart\">Cart</option>\n//                 </select>\n//             </div>\n\n//             {paymentMethod === \"cart\" &&\n//                 <Fragment>\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartHolderInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"name\">Cart Holder: </label>\n//                         <input style={{ border: `${cartHolderInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartHolderValue} onChange={cartHolderOnChangeHandler} onBlur={cartHolderOnBlurHandler} name=\"cart-holder\" id=\"name\" type=\"text\" placeholder=\"Joe Doe...\" required />\n//                     </div>\n//                     {cartHolderInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 5 characters long</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartNumberInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-number\">Cart Number: </label>\n//                         <input style={{ border: `${cartNumberInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartNumberValue} onChange={cartNumberOnChangeHandler} onBlur={cartNumberOnBlurHandler} name=\"cart-number\" id=\"cart-number\" type=\"text\" placeholder=\"4719 7838 8973 3778\" required />\n//                     </div>\n//                     {cartNumberInputHasError && <p className={classes.error}>*Invalid input. Cart needs to have 12 numbers</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartExpiryDateInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-expiry-date\">Expires: </label>\n//                         <input style={{ border: `${cartExpiryDateInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartExpiryDateValue} onChange={cartExpiryDateOnChangeHandler} onBlur={cartExpiryDateOnBlurHandler} name=\"cart-expiry-date\" id=\"cart-expiry-date\" type=\"text\" placeholder=\"03/26\" required />\n//                     </div>\n//                     {cartExpiryDateInputHasError && <p className={classes.error}>*Invalid date. It doesn't contain \"/\" or it has not a valid date</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartCodeInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-code\">Code: </label>\n//                         <input style={{ border: `${cartCodeInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartCodeValue} onChange={cartCodeOnChangeHandler} onBlur={cartCodeOnBlurHandler} name=\"cart-code\" id=\"cart-code\" type=\"password\" placeholder=\"***\" required />\n//                     </div>\n//                     {cartCodeInputHasError && <p className={classes.error}>*Invalid code. Code needs to be 3 characters long</p>}\n//                 </Fragment>}\n//             <div className={classes.action}>\n//                 <Button onClick={editOrderHandler}>Go Back</Button>\n//                 <Button disabled={!formIsValid || isSubmitting}>{!isSubmitting ? \"Finish order\": \"Submitting\"}</Button>\n//             </div>\n//         </Form>\n//     )\n// };\n\n// export default CheckOutDetails;\nvar _c;\n$RefreshReg$(_c, \"CheckOutDetails\");","map":{"version":3,"names":["Fragment","useContext","useEffect","useState","cartContext","UseInput","Button","classes","Input","redirect","CheckOutDetails","paymentMethod","setPaymentMethod","formIsValid","setFormIsValid","isLoading","setIsLoading","isSubmitted","setIsSubmitted","value","nameValue","onChange","nameOnChangeHandler","onBlur","nameOnBlurHandler","inputIsValid","nameInputIsValid","inputHasError","nameInputHasError","reset","resetName","trim","length","addressValue","addressOnChangeHandler","addressOnBlurHandler","addressInputIsValid","addressInputHasError","resetAddress","includes","cartHolderValue","cartHolderOnChangeHandler","cartHolderOnBlurHandler","cartHolderInputIsValid","cartHolderInputHasError","resetCartHolder","cartNumberValue","cartNumberOnChangeHandler","cartNumberOnBlurHandler","cartNumberInputIsValid","cartNumberInputHasError","resetCartNumber","cartExpiryDateValue","cartExpiryDateOnChangeHandler","cartExpiryDateOnBlurHandler","cartExpiryDateInputIsValid","cartExpiryDateInputHasError","resetCartExpiryDate","cartCodeValue","cartCodeOnChangeHandler","cartCodeOnBlurHandler","cartCodeInputIsValid","cartCodeInputHasError","resetCartCode","setCheckOut","cartItems","paymentMethodHandler","event","target","editOrderHandler","sendOrderToDataBase","response","fetch","method","body","JSON","stringify","order","items","name","address","cartHolder","cartNumber","cartExpiryDate","cartCode","headers","ok","message","sendOrderHandler","preventDefault","setTimeout","height","div","error","details","action"],"sources":["/Users/akeronallkushi/Desktop/REACT/Nike Backend/frontend/src/components/Cart/CheckOutDetails.js"],"sourcesContent":["import { Fragment, useContext, useEffect, useState } from \"react\";\nimport cartContext from \"../../store/use-context\";\nimport UseInput from \"../../hooks/UseInput\";\nimport Button from \"../../UI/Button\"\nimport classes from \"./CheckOutDetails.module.css\";\nimport Input from \"../../UI/Input\";\nimport { redirect } from \"react-router-dom\";\n\nconst CheckOutDetails = () => {\n    const [paymentMethod, setPaymentMethod] = useState(\"cash\");\n    const [formIsValid, setFormIsValid] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const {\n        value: nameValue,\n        onChange: nameOnChangeHandler,\n        onBlur: nameOnBlurHandler,\n        inputIsValid: nameInputIsValid,\n        inputHasError: nameInputHasError,\n        reset: resetName\n    } = UseInput(value => value.trim().length > 3);\n\n    const {\n        value: addressValue,\n        onChange: addressOnChangeHandler,\n        onBlur: addressOnBlurHandler,\n        inputIsValid: addressInputIsValid,\n        inputHasError: addressInputHasError,\n        reset: resetAddress\n    } = UseInput(value => value.includes(\"Street\"));\n\n    const {\n        value: cartHolderValue,\n        onChange: cartHolderOnChangeHandler,\n        onBlur: cartHolderOnBlurHandler,\n        inputIsValid: cartHolderInputIsValid,\n        inputHasError: cartHolderInputHasError,\n        reset: resetCartHolder\n    } = UseInput(value => value.trim().length > 5);\n\n    const {\n        value: cartNumberValue,\n        onChange: cartNumberOnChangeHandler,\n        onBlur: cartNumberOnBlurHandler,\n        inputIsValid: cartNumberInputIsValid,\n        inputHasError: cartNumberInputHasError,\n        reset: resetCartNumber\n    } = UseInput(value => value.trim().length === 12);\n\n    const {\n        value: cartExpiryDateValue,\n        onChange: cartExpiryDateOnChangeHandler,\n        onBlur: cartExpiryDateOnBlurHandler,\n        inputIsValid: cartExpiryDateInputIsValid,\n        inputHasError: cartExpiryDateInputHasError,\n        reset: resetCartExpiryDate\n    } = UseInput(value => value.includes(\"/\") && value.trim().length === 5);\n\n    const {\n        value: cartCodeValue,\n        onChange: cartCodeOnChangeHandler,\n        onBlur: cartCodeOnBlurHandler,\n        inputIsValid: cartCodeInputIsValid,\n        inputHasError: cartCodeInputHasError,\n        reset: resetCartCode\n    } = UseInput(value => value.trim().length === 3);\n\n    useEffect(() => {\n        if (paymentMethod === \"cash\") {\n            setFormIsValid(nameInputIsValid && addressInputIsValid)\n        }\n\n        if (paymentMethod === \"cart\") {\n            setFormIsValid(nameInputIsValid && addressInputIsValid && cartHolderInputIsValid && cartExpiryDateInputIsValid && cartNumberInputIsValid && cartCodeInputIsValid)\n        }\n    }, [paymentMethod, nameInputIsValid, addressInputIsValid, cartHolderInputIsValid, cartExpiryDateInputIsValid, cartNumberInputIsValid, cartCodeInputIsValid]);\n\n\n    const { setCheckOut, cartItems } = useContext(cartContext)\n    function paymentMethodHandler(event) {\n        setPaymentMethod(event.target.value);\n    }\n\n    function editOrderHandler() {\n        setCheckOut(false)\n    }\n\n    async function sendOrderToDataBase() {\n        setIsLoading(true);\n        setIsSubmitted(false);\n        const response = await fetch(\"https://players-c7f1b-default-rtdb.firebaseio.com/products/order.json\", {\n            method: \"POST\",\n            body: JSON.stringify(\n                {\n                    order: cartItems.items,\n                    name: nameValue, address: addressValue, paymentMethod: paymentMethod,\n                    cartHolder: cartHolderValue ? cartHolderValue : null,\n                    cartNumber: cartNumberValue ? cartNumberValue : null,\n                    cartExpiryDate: cartExpiryDateValue ? cartExpiryDateValue : null,\n                    cartCode: cartCodeValue ? cartCodeValue : null,\n                }\n            ),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n\n        if (!response.ok) {\n            throw { message: \"Order could not be sent\" }\n        }\n        setIsLoading(false);\n        setIsSubmitted(true);\n\n        return response;\n    };\n\n    function sendOrderHandler(event) {\n        event.preventDefault();\n        if (!formIsValid) {\n            return\n        };\n\n        sendOrderToDataBase();\n        resetName();\n        resetAddress();\n        resetCartHolder();\n        resetCartNumber();\n        resetCartExpiryDate();\n        resetCartCode();\n    }\n\n\n    useEffect(() => {\n        if(isSubmitted === true) {\n            setTimeout(() => {\n               return redirect(\"/products\")\n            }, 1500)\n        }\n    }, [isSubmitted])\n    return (\n        <>\n            {!isLoading && !isSubmitted && <form onSubmit={sendOrderHandler} style={{ height: `${paymentMethod === \"cash\" ? \"200px\" : \"450px\"}` }} className={classes.div}>\n                <Input\n                    inputHasError={nameInputHasError}\n                    name=\"name\"\n                    label=\"Full Name: \"\n                    value={nameValue}\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Joe Doe...\"\n                    onChange={nameOnChangeHandler}\n                    onBlur={nameOnBlurHandler}\n                />\n                {nameInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 3 characters long</p>}\n\n                <Input\n                    inputHasError={addressInputHasError}\n                    name=\"address\"\n                    label=\"Address: \"\n                    value={addressValue}\n                    id=\"address\"\n                    type=\"text\"\n                    placeholder=\"Street\"\n                    onChange={addressOnChangeHandler}\n                    onBlur={addressOnBlurHandler}\n                />\n                {addressInputHasError && <p className={classes.error}>*Invalid address. It doesn't have a street</p>}\n\n                <div className={classes.details}>\n                    <label htmlFor=\"payment\">Payment: </label>\n                    <select value={paymentMethod} name=\"payment-method\" onChange={paymentMethodHandler} defaultValue=\"cash\">\n                        <option value=\"cash\">Cash</option>\n                        <option value=\"cart\">Cart</option>\n                    </select>\n                </div>\n\n                {paymentMethod === \"cart\" &&\n                    <Fragment>\n                        <Input\n                            inputHasError={cartHolderInputHasError}\n                            name=\"cart-holder\"\n                            label=\"Cart Holder \"\n                            value={cartHolderValue}\n                            id=\"cart-holder\"\n                            type=\"text\"\n                            placeholder=\"Cart Holder\"\n                            onChange={cartHolderOnChangeHandler}\n                            onBlur={cartHolderOnBlurHandler}\n                        />\n                        {cartHolderInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 5 characters long</p>}\n\n                        <Input\n                            inputHasError={cartNumberInputHasError}\n                            name=\"cart-number\"\n                            label=\"Cart Number\"\n                            value={cartNumberValue}\n                            id=\"cart-number\"\n                            type=\"text\"\n                            placeholder=\"Cart Number\"\n                            onChange={cartNumberOnChangeHandler}\n                            onBlur={cartNumberOnBlurHandler}\n                        />\n                        {cartNumberInputHasError && <p className={classes.error}>*Invalid input. Cart needs to have 12 numbers</p>}\n\n                        <Input\n                            inputHasError={cartExpiryDateInputHasError}\n                            name=\"cart-expiry\"\n                            label=\"Cart Expiry \"\n                            value={cartExpiryDateValue}\n                            id=\"cart-expiry\"\n                            type=\"text\"\n                            placeholder=\"03/23\"\n                            onChange={cartExpiryDateOnChangeHandler}\n                            onBlur={cartExpiryDateOnBlurHandler}\n                        />\n                        {cartExpiryDateInputHasError && <p className={classes.error}>*Invalid date. It doesn't contain \"/\" or it has not a valid date</p>}\n\n                        <Input\n                            inputHasError={cartCodeInputHasError}\n                            name=\"cart-code\"\n                            label=\"Cart Code \"\n                            value={cartCodeValue}\n                            id=\"cart-code\"\n                            type=\"password\"\n                            placeholder=\"***\"\n                            onChange={cartCodeOnChangeHandler}\n                            onBlur={cartCodeOnBlurHandler}\n                        />\n                        {cartCodeInputHasError && <p className={classes.error}>*Invalid code. Code needs to be 3 characters long</p>}\n                    </Fragment>}\n\n                <div className={classes.action}>\n                    <Button onClick={editOrderHandler}>Go Back</Button>\n                    <Button disabled={!formIsValid} type=\"submit\">Finish order</Button>\n                </div>\n            </form>}\n            {isLoading && !isSubmitted && <p>Sending Order</p>}\n            {!isLoading && isSubmitted && <p>Order Sent!</p>}\n        </>\n\n    )\n};\n\nexport default CheckOutDetails;\n\n//import { Fragment, useContext, useEffect, useState } from \"react\";\n// import { useNavigation } from \"react-router-dom\";\n// import { Form } from \"react-router-dom\";\n// import cartContext from \"../../store/use-context\";\n// import UseInput from \"../../hooks/UseInput\";\n// import Button from \"../../UI/Button\"\n// import classes from \"./CheckOutDetails.module.css\"\n\n// const CheckOutDetails = () => {\n//     const [paymentMethod, setPaymentMethod] = useState(\"cash\");\n//     const [formIsValid, setFormIsValid] = useState(false);\n//     const {\n//         value: nameValue,\n//         onChange: nameOnChangeHandler,\n//         onBlur: nameOnBlurHandler,\n//         inputIsValid: nameInputIsValid,\n//         inputHasError: nameInputHasError,\n//         reset: resetName\n//     } = UseInput(value => value.trim().length > 3);\n\n//     const {\n//         value: addressValue,\n//         onChange: addressOnChangeHandler,\n//         onBlur: addressOnBlurHandler,\n//         inputIsValid: addressInputIsValid,\n//         inputHasError: addressInputHasError,\n//         reset: resetAddress\n//     } = UseInput(value => value.includes(\"Street\"));\n\n//     const {\n//         value: cartHolderValue,\n//         onChange: cartHolderOnChangeHandler,\n//         onBlur: cartHolderOnBlurHandler,\n//         inputIsValid: cartHolderInputIsValid,\n//         inputHasError: cartHolderInputHasError,\n//         reset: resetCartHolder\n//     } = UseInput(value => value.trim().length > 5);\n\n//     const {\n//         value: cartNumberValue,\n//         onChange: cartNumberOnChangeHandler,\n//         onBlur: cartNumberOnBlurHandler,\n//         inputIsValid: cartNumberInputIsValid,\n//         inputHasError: cartNumberInputHasError,\n//         reset: resetCartNumber\n//     } = UseInput(value => value.trim().length === 12);\n\n//     const {\n//         value: cartExpiryDateValue,\n//         onChange: cartExpiryDateOnChangeHandler,\n//         onBlur: cartExpiryDateOnBlurHandler,\n//         inputIsValid: cartExpiryDateInputIsValid,\n//         inputHasError: cartExpiryDateInputHasError,\n//         reset: resetCartExpiryDate\n//     } = UseInput(value => value.includes(\"/\") && value.trim().length === 5);\n\n//     const {\n//         value: cartCodeValue,\n//         onChange: cartCodeOnChangeHandler,\n//         onBlur: cartCodeOnBlurHandler,\n//         inputIsValid: cartCodeInputIsValid,\n//         inputHasError: cartCodeInputHasError,\n//         reset: resetCartCode\n//     } = UseInput(value => value.trim().length === 3);\n\n//     useEffect(() => {\n//         if (paymentMethod === \"cash\") {\n//             setFormIsValid(nameInputIsValid && addressInputIsValid)\n//         }\n\n//         if (paymentMethod === \"cart\") {\n//             setFormIsValid(nameInputIsValid && addressInputIsValid && cartHolderInputIsValid && cartExpiryDateInputIsValid && cartNumberInputIsValid && cartCodeInputIsValid)\n//         }\n//     }, [paymentMethod, nameInputIsValid, addressInputIsValid, cartHolderInputIsValid, cartExpiryDateInputIsValid, cartNumberInputIsValid, cartCodeInputIsValid])\n\n\n//     const { setCheckOut, cartItems } = useContext(cartContext)\n//     function paymentMethodHandler(event) {\n//         setPaymentMethod(event.target.value);\n//     }\n\n//     function editOrderHandler() {\n//         setCheckOut(false)\n//     }\n\n//     const navigation = useNavigation();\n//     const isSubmitting = navigation.state === \"submitting\";\n\n\n//     return (\n//         <Form itemID=\"a1\" method=\"post\" style={{ height: `${paymentMethod === \"cash\" ? \"200px\" : \"450px\"}` }} className={classes.div}>\n//             <div className={classes.details}>\n//                 <label style={{ color: `${nameInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"name\">Full name: </label>\n//                 <input style={{ border: `${nameInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={nameValue} onChange={nameOnChangeHandler} onBlur={nameOnBlurHandler} name=\"name\" id=\"name\" type=\"text\" placeholder=\"Joe Doe...\" required />\n//             </div>\n//             {nameInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 3 characters long</p>}\n\n//             <div className={classes.details}>\n//                 <label style={{ color: `${addressInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"address\">Address: </label>\n//                 <input style={{ border: `${addressInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={addressValue} onChange={addressOnChangeHandler} onBlur={addressOnBlurHandler} name=\"address\" id=\"address\" type=\"text\" placeholder=\"Street name and number...\" required />\n//             </div>\n//             {addressInputHasError && <p className={classes.error}>*Invalid address. It doesn't have a street</p>}\n\n//             <div className={classes.details}>\n//                 <label htmlFor=\"payment\">Payment: </label>\n//                 <select value={paymentMethod} name=\"payment-method\" onChange={paymentMethodHandler} defaultValue=\"cash\">\n//                     <option value=\"cash\">Cash</option>\n//                     <option value=\"cart\">Cart</option>\n//                 </select>\n//             </div>\n\n//             {paymentMethod === \"cart\" &&\n//                 <Fragment>\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartHolderInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"name\">Cart Holder: </label>\n//                         <input style={{ border: `${cartHolderInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartHolderValue} onChange={cartHolderOnChangeHandler} onBlur={cartHolderOnBlurHandler} name=\"cart-holder\" id=\"name\" type=\"text\" placeholder=\"Joe Doe...\" required />\n//                     </div>\n//                     {cartHolderInputHasError && <p className={classes.error}>*Invalid name. Name needs to be at least 5 characters long</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartNumberInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-number\">Cart Number: </label>\n//                         <input style={{ border: `${cartNumberInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartNumberValue} onChange={cartNumberOnChangeHandler} onBlur={cartNumberOnBlurHandler} name=\"cart-number\" id=\"cart-number\" type=\"text\" placeholder=\"4719 7838 8973 3778\" required />\n//                     </div>\n//                     {cartNumberInputHasError && <p className={classes.error}>*Invalid input. Cart needs to have 12 numbers</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartExpiryDateInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-expiry-date\">Expires: </label>\n//                         <input style={{ border: `${cartExpiryDateInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartExpiryDateValue} onChange={cartExpiryDateOnChangeHandler} onBlur={cartExpiryDateOnBlurHandler} name=\"cart-expiry-date\" id=\"cart-expiry-date\" type=\"text\" placeholder=\"03/26\" required />\n//                     </div>\n//                     {cartExpiryDateInputHasError && <p className={classes.error}>*Invalid date. It doesn't contain \"/\" or it has not a valid date</p>}\n\n//                     <div className={classes.details}>\n//                         <label style={{ color: `${cartCodeInputHasError ? \"rgb(194, 34, 34)\" : \"black\"}` }} htmlFor=\"cart-code\">Code: </label>\n//                         <input style={{ border: `${cartCodeInputHasError ? \"2px solid rgb(194, 34, 34)\" : \"1px solid #111\"}` }} value={cartCodeValue} onChange={cartCodeOnChangeHandler} onBlur={cartCodeOnBlurHandler} name=\"cart-code\" id=\"cart-code\" type=\"password\" placeholder=\"***\" required />\n//                     </div>\n//                     {cartCodeInputHasError && <p className={classes.error}>*Invalid code. Code needs to be 3 characters long</p>}\n//                 </Fragment>}\n//             <div className={classes.action}>\n//                 <Button onClick={editOrderHandler}>Go Back</Button>\n//                 <Button disabled={!formIsValid || isSubmitting}>{!isSubmitting ? \"Finish order\": \"Submitting\"}</Button>\n//             </div>\n//         </Form>\n//     )\n// };\n\n// export default CheckOutDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}